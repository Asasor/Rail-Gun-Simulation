import numpy as np
import matplotlib.pyplot as plt

mu_pi = 1.257 * 10**-6 / 4 * np.pi
# emf --> induced emf, B --> magnetic force, v --> velocity
# v_f = lambda S_F, m, l: np.sqrt(2 * S_F / m * l)  # can be used when not accounting for emf with constant current
emf = lambda B, d, v: B * d * v
# assuming l is at least 3-4 times larger than d (preferably more)


R_projectile = 0.02  # projectile resistance
R_rails = 0.01  # rail resistance
R_back = 0.01  # back resistance
R_total = R_projectile + 2 * R_rails + R_back  # total resistance
V = 6000  # Capacitor charge voltage
C = 4000  # total charge
x = 0  # distance traveled along rail
l = 5  # rail length
r = 0.005  # rail radius
m = 0.2  # projectile mass
dt = 0.01  # time step size
d = 0.02  # horizontal distance between rails
v = 0  # velocity
Q = C * V
aL, vL, xL, IL, emf_L = [], [], [], [], []

const_B_F = mu_pi * 2 * np.log((d - r) / r)

while x < l:
    I = Q / (R_total * C)  # total current
    B = (I * R_rails)**2 * const_B_F  # magnetic force generated by rails
    Q -= I + emf(B, d, v) / R_total   # current decay
    a = B / m  # acceleration of projectile
    v += a * dt
    x += v * dt
    aL.append(a)
    vL.append(v)
    xL.append(x)
    emf_L.append(emf(B, d, v))
    IL.append(I)

x_plt = np.arange(len(aL)) * dt
fig, ax = plt.subplots()
line1, = ax.plot(x_plt, aL, label="acceleration (m/s^2)")
line2, = ax.plot(x_plt, vL, label="velocity (m/s)")
line3, = ax.plot(x_plt, xL, label="position (m)")
ax.set_xlabel('time (s)')
fig.legend(handles=[line1, line2, line3])
fig.show()
fig, ax = plt.subplots()
line4, = ax.plot(x_plt, emf_L, label="emf (V)")
line5, = ax.plot(x_plt, IL, label="current (I)")
ax.set_xlabel('time (s)')
fig.legend(handles=[line4, line5])
fig.show()
